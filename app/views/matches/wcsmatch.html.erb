<% content_for(:heading) do %>
<!-- do not invert top HAX -->
<% end %>

          <%# note: this is here because even though ng-class is fast, it will make transitions fire %>
<div id="match" ng-controller="MatchController" ng-class="{condensed: condensed}" class="type-<%= @match.game_type %> <%= @match.game_type != '1v1' ? 'condensed' : '' %>">

  <div class="top">
    <div class="ytrow_container">
      <div class="statsblock">
        ECONOMY<br>
        Minls: {{ match.teams[1].mineral_income }}<br>
        &nbsp;&nbsp;Gas: {{ match.teams[1].gas_income }}<br>
        Wrkrs: {{ match.teams[1].elem('WorkersActiveCount') }}<br>
        Bases: 123<br>
        &nbsp;&nbsp;APM: {{ match.teams[1].mineral_income }}<br>
        &nbsp;Lost: {{ match.teams[1].elem('Lost') }}<br>
      </div>
      <div id="ytplayer"></div>
      <div class="statsblock">
        ECONOMY<br>
        Minls: {{ match.teams[2].mineral_income }}<br>
        &nbsp;&nbsp;Gas: {{ match.teams[2].gas_income }}<br>
        Wrkrs: {{ match.teams[2].elem('WorkersActiveCount') }}<br>
        Bases: 123<br>
        &nbsp;&nbsp;APM: {{ match.teams[2].mineral_income }}<br>
        &nbsp;Lost: {{ match.teams[2].elem('Lost') }}<br>
      </div>
    </div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('ytplayer', {
          height: '550',
          width: '800',
          videoId: 'X6bJ4haYXyM',
          events: {
            'onReady': onPlayerReady
          }
        });
      }

      S2_TIMESCALE = 1.4018;

      function compute_s2_time(yt_time) {
        if (yt_time < 637) {
          return Math.max(0, 20 + S2_TIMESCALE * (yt_time - 417));
        }
        if (yt_time < 851) {
          return 329
        }

        return Math.min(334 + S2_TIMESCALE * (yt_time - 851), 1785);
      }

      function updateObserverUI() {
        $('#yt_time').text(player.getCurrentTime());
        s2_time = compute_s2_time(player.getCurrentTime());
        $('#s2_time').text(s2_time);
        matchScope = angular.element($('#match')).scope();
        matchScope.$apply(function() {
          matchScope.current_frame = Math.floor(s2_time * 16.0);
        });
      }

      function onPlayerReady(event) {
        event.target.playVideo();
        window.setInterval(updateObserverUI, 250);
        matchScope = angular.element($('#match')).scope();
        matchScope.$apply(function() {
          matchScope.videoplayer = player;
        });
      }

    </script>

    <%= render 'shared/sidebarad' %>    

    <!--
    <matchmap data-framee="current_framee" data-minimapurl="http://s3.amazonaws.com/<%= Rails.configuration.s3['minimaps']['bucket']  %>/<%= @match.map["s2ma_hash"] %>_100.png" data-match="match"></matchmap>
    -->
    <a href class="ggtipper2" title="Total army strength in minerals + gas throughout the game.<br><br>Move your mouse over the chart to see what was in each army at any point in the game.<br><br>Click and drag to zoom.<br><br>Click on the chart to freeze that time selection." data-gravity="nw">
      <span class="title lefty">army strength, minerals + gas</span>
    </a>

    <span class="title lefty armycomp">army composition and resource value</span>
    <div class="teams">
      <div class="sep"><span class="vs">vs</span><span class="time">{{ current_time }}</span></div>

      <% for team, entities in @match.teams.sort do %>
      <div class="team team<%= team %>">
        <div class="info">
          <div class="name">
            <span class="flag" style="background-color: #{{ entity.color }};"></span>
            <a target="_self" href="/players/{{ entity.identity.id }}/{{ entity.identity.name }}">Team <%= team %></a>
          </div>

          <ul class="stats">
            <li class="minerals"><div class="icon sc2-mineral-16"></div><span class="value">{{ match.teams[<%= team %>].minerals }}</span></li>
            <li class="gas"><div class="icon sc2-gas-16"></div><span class="value">{{ match.teams[<%= team %>].gas }}</span></li>
            <li class="supply"><div class="icon sc2-supply-16"></div><span class="value">{{ match.teams[<%= team %>].supply }}</span></li>
          </ul>

          <div class="clear"></div>
        </div>
        
        <% for entity in entities do %>
          <%= render('entity', :entity => entity, :entity_num => @match.entities.index(entity)) %>
        <% end %>
      </div>
      <% end %>
      <div class="clear"></div>
    </div>
    <armychart id="armychart" data-width="1024px" data-data="armies_and_idents" data-frame="current_frame" data-framee="current_framee" data-initial-frame="0" data-chart="armychart" data-armies="armies" data-match="match" data-condensed="condensed">
    </armychart>

  </div>

</div>
